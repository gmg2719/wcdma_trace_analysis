//Autocorrelates the preamble against shifted versions of itself
//#include <cstdio>
#include <stdlib.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <stdexcept>
#include <stdio.h>
#include <assert.h>
#include <math.h>
#include <complex>
#include <iostream>
#include <string.h>
using namespace std;

typedef std::complex<float>             gr_complex;
#define DATA_TYPE gr_complex

const gr_complex sync_codes[][512] =
{
    {gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(-1.0, 1.0), gr_complex(1.0, -1.0), gr_complex(1.0, -1.0)}, 
    {gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(-1.0, 0), gr_complex(1.0, 0), gr_complex(1.0, 0)},
    {gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(-1.0, -1.0), gr_complex(1.0, 1.0), gr_complex(1.0, 1.0)}
};

// void set_preamble(const char *);
void set_preamble();
void correlate();

#define fft_length  512
// gr_complex d_preamble[fft_length];
// gr_complex garble[fft_length];
int offset = 0;

DATA_TYPE *d_data; //to store the data stream
DATA_TYPE *d_preamble = NULL;
DATA_TYPE *garble = NULL;
int desired_count;

int main (int argc, const char *argv[])
{
    if (argc != 5)
    {
        fprintf (stderr, " usage: %s <preamble input file> <start index> <end index> <threshold>\n", argv[0]);
        exit(1);
    }
    int start_ind = atoi(argv[2]);
    int end_ind = atoi(argv[3]);
    int threshold = atoi(argv[4]);

    FILE *d_fp;

    if ((d_fp = fopen(argv[1], "rb")) == NULL)
    {
        fprintf(stderr, "data file cannot be opened\n");
        assert(false);
    }

    //get file size
    fseek( d_fp, 0L, SEEK_END );
    long endPos = ftell( d_fp );
    fclose(d_fp);

    DATA_TYPE *tmp_d_data = (DATA_TYPE *) malloc(endPos);

    //re-open file
    if ((d_fp = fopen(argv[1], "rb")) == NULL)
    {
        fprintf(stderr, "data file cannot be opened\n");
        assert(false);
    }

    int count = fread_unlocked(tmp_d_data, sizeof(DATA_TYPE), endPos / sizeof(DATA_TYPE), d_fp);
    desired_count = end_ind - start_ind;
    d_data = (DATA_TYPE *) malloc(sizeof(DATA_TYPE) * desired_count);
    // cout << tmp_d_data << ", " << start_ind << ", " << (tmp_d_data + start_ind) << ", size:" << sizeof(DATA_TYPE) << "\n";
    // return 0;
    memcpy(d_data, tmp_d_data + start_ind, sizeof(DATA_TYPE) * desired_count);


    for (int i = 0 ; i < desired_count-512; i++)
    {
        offset = i;

        gr_complex sum = 0;
        //inner-product
        for (int j = 0 ; j < 512; j++)
        {
            sum += (d_data[i + j] * conj(sync_codes[0][j]));
            // sum += (tmp_d_data[start_ind + i + j] * conj(sync_codes[0][j]));
        }

        //magnitude
        // cout <<  offset << " " <<  std::abs(sum) << "\n";
        cout << offset << " " << abs(d_data[i]) << " " << arg(d_data[i]) << " " << d_data[i].real() << " " << d_data[i].imag() << " " << std::abs(sum) << " ";
        if(std::abs(sum) > threshold) {
            cout << 1 << endl;
        }
        else {
            cout << 0 << endl;
        }

    }

    return 0;
}


